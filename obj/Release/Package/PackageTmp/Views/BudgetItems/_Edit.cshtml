@model Budgeter.Models.CodeFirst.BudgetItem

@using (Html.BeginForm("Edit","BudgetItems"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal ">
        <div class="container">
            <div class="row">
                <div class="col-md-5">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">Edit Account</h4>
                        </div>
                        <section class="panel-body ">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.HouseholdId)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Type, "Expense", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.RadioButton("Type", true, htmlAttributes: new { @class = "radio" })
                                </div>
                                @Html.LabelFor(model => model.Type, "Income", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.RadioButton("Type", false, htmlAttributes: new { @class = "radio" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })

                                @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                </div>

                                    @*@Html.LabelFor(model => model.Frequency,"Annual", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Frequency, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Frequency, "", new { @class = "text-danger" })
                                    </div>*@

                                <div class="col-md-offset-2 col-md-10">
                                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-sm btn-default" })
                                    <input type="submit" value="Save" class="btn btn-sm btn-success" />
                                </div>
                            </div>
                        </section>
                    </div>
                </div>
                </div> 
            </div>
        </div>
}

