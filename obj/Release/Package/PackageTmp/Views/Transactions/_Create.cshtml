@model Budgeter.Models.CodeFirst.Transaction

@using (Html.BeginForm("Create","Transactions"))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-horizontal ">
        <div class="container">
            <div class="row">
                <div class="col-md-8">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">Create Transaction</h4>
                        </div>
                        <section class="panel-body ">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @value = "System.DateTimeOffset.Now.LocalDateTime", @type = "date", @onfocus = "(this.type='date')" } })
                                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.BankAccountId, "Account", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("BankAccountId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BankAccountId, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.Type, "Expense", htmlAttributes: new { @class = "control-label col-md-2"})
                                <div class="col-md-10">
                                    @Html.RadioButton("Type", true, htmlAttributes: new { @class = "radio" })
                                </div>
                                @Html.LabelFor(model => model.Type, "Income", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.RadioButton("Type", false, htmlAttributes: new { @class = "radio" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })

                                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.Reconciled, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Reconciled)
                                        @Html.ValidationMessageFor(model => model.Reconciled, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-offset-2 col-md-10">
                                    @*@Html.ActionLink("Cancel", "Details", "BankAccounts", new { @id = Model.BankAccount.Id }, new { @class = "btn btn-sm btn-default" })*@
                                    <input type="submit" value="Create" class="btn btn-sm btn-success" />
                                </div>
                            </div>
                        </section> 
                    </div>
                </div> 
            </div> 
        </div>
    </div> 
}


